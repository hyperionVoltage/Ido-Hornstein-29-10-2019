{"version":3,"sources":["Styles/header.module.css","Styles/searchbar.module.css","Styles/singularlocationweatherdisplay.module.css","Styles/weathercard.module.css","Styles/favorites.module.css","Styles/favoritessearchbar.module.css","Styles/favoriteweathercard.module.css","Styles/errors.module.css","Components/SearchBar.js","Components/WeatherCard.js","Components/SingularLocationWeatherDisplay.js","Routes/Index.js","Components/FavoritesSearchBar.js","Components/FavoriteWeatherCard.js","Routes/Favorites.js","Components/Error.js","Components/Header.js"],"names":["module","exports","SearchBar","stateProvider","useContext","StateContext","useState","relatedLocationList","setRelatedLocationList","favoritesElement","setFavoritesElement","searchBarEl","useRef","displayedRelatedLocation","relatedLocationsElements","relatedLocationsCodes","relatedLocationsNames","tempFavoriteArray","locationProvider","setLocation","useEffect","location","a","axios","get","params","apikey","process","q","language","catch","e","console","error","errorsProvider","setErrors","errors","res","data","length","map","key","LocalizedName","AdministrativeArea","Country","push","Key","className","styles","individual_location","onClick","clickedAutocomplete","getAutocompletedLocationName","locationCodeProvider","locationCode","details","metric","metricUnitProvider","metricUnits","forecastProvider","setForecast","getForecast","retriveCurrentLocationObject","fetchFavoriteLocationFromList","favoriteLocationsProvider","favoriteLocations","search_box","style","themeStyle","themesStylesWhole","input_seperator","themesStylesText","ref","search_text","type","placeholder","selectedLocationProvider","selectedLocation","onChange","lastLocationSearchProvider","setLastLocationSearch","target","value","search_related_locations","search_button","lastLocationSearch","toString","formated_searched_location_array","toLowerCase","split","formated_searched_location","index","charAt","toUpperCase","substring","join","icon","faSearchLocation","add_to_favorites","color","removeableIndex","log","splice","setFavoriteLocations","faMinusCircle","faPlusCircle","setSelectedLocation","setLocationCode","current","keyIndex","locationName","WeatherCard","props","weatherDate","Date","minTemperature","Temperature","Minimum","maxTemperature","Maximum","wholeDayWeather","Day","IconPhrase","Night","weather_card","weather_day_name","toLocaleDateString","weekday","substr","weather_max_temp","Math","round","Value","weather_min_temp","weather_whole_day","weather_day_info","weather_day_night_divide","weather_night_info","SingularLocationWeatherDisplay","backgroundImage","setBackgroundImage","latLong","usedGeolocationProvider","usedGeolocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","toplevel","then","setUsedGeolocation","getGeolocation","getBackgroundImageFromLocation","query","orientation","headers","Authorization","results","floor","random","links","download","getCurrentWeather","currentWeatherProvider","setCurrentWeather","forecast","DailyForecasts","forecastDetails","location_image","location_title","container","currentWeather","current_weather","current_weather_weather_type","WeatherText","Metric","Imperial","Index","FavoritesSearchBar","extend_container","favoriteSearchBarEl","searchedFavoritesProvider","setSearchedFavorites","FavoriteWeatherCard","navigateToDetails","setNavigateToDetails","weatherStatus","setWeatherStatus","favoriteLocationsArray","retriveSingleLocationCurrentWeather","Fragment","to","seperator","location_name","location_temp","location_weather","remove_button","faTimes","remove_icon","Favorites","allFavorites","setAllFavorites","allDisplayed","setAllDisplayed","allFavoriteArray","allDisplayedArray","favoriteLocation","includes","searchedFavorites","favorite_location_container","Error","errorList","error_container","error_text","errorText","error_dismiss_button","Header","currentErrors","setCurrentErrors","header","error_starter","unit_changer","setMetricUnits","theme_changer","themeProvider","lightTheme","setLightTheme","nav_links","nav_link","link","path"],"mappings":"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","file":"static/js/3.a34b33c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"header_link__LSzw3\",\"nav_link\":\"header_nav_link__3raDr\",\"header\":\"header_header__3QiQY\",\"nav_links\":\"header_nav_links__3ygCn\",\"error_starter\":\"header_error_starter__3odxs\",\"unit_changer\":\"header_unit_changer__1nwaC\",\"theme_changer\":\"header_theme_changer__1qvav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_box\":\"searchbar_search_box__26bKA\",\"search_text\":\"searchbar_search_text__1Osym\",\"search_button\":\"searchbar_search_button__1r_pY\",\"search_related_locations\":\"searchbar_search_related_locations__2lp3Q\",\"individual_location\":\"searchbar_individual_location__b1Ye4\",\"input_seperator\":\"searchbar_input_seperator__dtkTB\",\"add_to_favorites\":\"searchbar_add_to_favorites__1Y1bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"singularlocationweatherdisplay_container__1PV_v\",\"location_title\":\"singularlocationweatherdisplay_location_title__1tY3P\",\"location_image\":\"singularlocationweatherdisplay_location_image__1qbcE\",\"current_weather\":\"singularlocationweatherdisplay_current_weather__2DGmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather_card\":\"weathercard_weather_card__2fV4J\",\"weather_day_name\":\"weathercard_weather_day_name__1BgQz\",\"weather_max_temp\":\"weathercard_weather_max_temp__24cPi\",\"weather_min_temp\":\"weathercard_weather_min_temp__uyOAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorite_location_container\":\"favorites_favorite_location_container__1hvsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_box\":\"favoritessearchbar_search_box__2IUe3\",\"search_text\":\"favoritessearchbar_search_text__2ePDG\",\"search_button\":\"favoritessearchbar_search_button__zdSJ3\",\"extend_container\":\"favoritessearchbar_extend_container__2zCh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favoriteweathercard_container__28f65\",\"location_name\":\"favoriteweathercard_location_name__36Zy9\",\"location_temp\":\"favoriteweathercard_location_temp__1Pk9_\",\"location_weather\":\"favoriteweathercard_location_weather__Y6npv\",\"remove_button\":\"favoriteweathercard_remove_button__1us43\",\"seperator\":\"favoriteweathercard_seperator__nZdb3\",\"remove_icon\":\"favoriteweathercard_remove_icon__3XFda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_container\":\"errors_error_container__37KV4\",\"error_text\":\"errors_error_text__14vSY\",\"error_dismiss_button\":\"errors_error_dismiss_button__2x3gE\"};","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport styles from \"../Styles/searchbar.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearchLocation,\r\n  faPlusCircle,\r\n  faMinusCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction SearchBar() {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const [relatedLocationList, setRelatedLocationList] = useState([]);\r\n  const [favoritesElement, setFavoritesElement] = useState(false);\r\n\r\n  const searchBarEl = useRef(null);\r\n\r\n  let displayedRelatedLocation = \"\";\r\n  let relatedLocationsElements = [];\r\n  let relatedLocationsCodes = [];\r\n  let relatedLocationsNames = [];\r\n  let tempFavoriteArray = [];\r\n\r\n  stateProvider.locationProvider.setLocation();\r\n\r\n  useEffect(() => {\r\n    if (stateProvider.locationProvider.location) {\r\n      async function getAutocompletedLocationName() {\r\n        const res = await axios\r\n          .get(\r\n            \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\",\r\n            {\r\n              params: {\r\n                apikey: process.env.REACT_APP_WEATHER_API_KEY,\r\n                q: stateProvider.locationProvider.location,\r\n                language: \"en-us\"\r\n              }\r\n            }\r\n          )\r\n          .catch(e => {\r\n            console.error(e);\r\n            stateProvider.errorsProvider.setErrors([\r\n              ...stateProvider.errorsProvider.errors,\r\n              \"Error fetching related locations\"\r\n            ]);\r\n          });\r\n        if (res) {\r\n          if (res.data.length !== 0) {\r\n            res.data.map((location, key) => {\r\n              displayedRelatedLocation =\r\n                location.LocalizedName +\r\n                \", \" +\r\n                location.AdministrativeArea.LocalizedName +\r\n                \", \" +\r\n                location.Country.LocalizedName;\r\n              relatedLocationsCodes.push(location.Key);\r\n              relatedLocationsNames.push(displayedRelatedLocation);\r\n              relatedLocationsElements.push(\r\n                <div key={key} className={styles.individual_location}>\r\n                  <a\r\n                    onClick={e => {\r\n                      clickedAutocomplete(key);\r\n                    }}\r\n                  >\r\n                    {displayedRelatedLocation}\r\n                  </a>\r\n                </div>\r\n              );\r\n            });\r\n            setRelatedLocationList(relatedLocationsElements);\r\n          }\r\n        }\r\n      }\r\n      getAutocompletedLocationName();\r\n    }\r\n  }, [stateProvider.locationProvider.location]);\r\n\r\n  useEffect(() => {\r\n    if (stateProvider.locationCodeProvider.locationCode) {\r\n      async function getForecast() {\r\n        const res = await axios\r\n          .get(\r\n            \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\" +\r\n              stateProvider.locationCodeProvider.locationCode,\r\n            {\r\n              params: {\r\n                apikey: process.env.REACT_APP_WEATHER_API_KEY,\r\n                language: \"en-us\",\r\n                details: false,\r\n                metric: stateProvider.metricUnitProvider.metricUnits\r\n              }\r\n            }\r\n          )\r\n          .catch(e => {\r\n            console.error(e);\r\n            stateProvider.errorsProvider.setErrors([\r\n              ...stateProvider.errorsProvider.errors,\r\n              \"Error fetching forecast\"\r\n            ]);\r\n          });\r\n        if (res) {\r\n          stateProvider.forecastProvider.setForecast(res.data);\r\n        }\r\n      }\r\n      getForecast();\r\n\r\n      if (retriveCurrentLocationObject()) {\r\n        if (fetchFavoriteLocationFromList() !== -1) {\r\n          setFavoritesElement(true);\r\n        } else {\r\n          setFavoritesElement(false);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    stateProvider.locationCodeProvider.locationCode,\r\n    stateProvider.favoriteLocationsProvider.favoriteLocations,\r\n    stateProvider.metricUnitProvider.metricUnits\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className={styles.search_box}\r\n      style={stateProvider.themeStyle.themesStylesWhole}\r\n    >\r\n      <div className={styles.input_seperator}>\r\n        <input\r\n          style={stateProvider.themeStyle.themesStylesText}\r\n          ref={searchBarEl}\r\n          className={styles.search_text}\r\n          type=\"text\"\r\n          placeholder={stateProvider.selectedLocationProvider.selectedLocation}\r\n          onChange={e => {\r\n            stateProvider.lastLocationSearchProvider.setLastLocationSearch(\r\n              e.target.value\r\n            );\r\n          }}\r\n        />\r\n\r\n        <div className={styles.search_related_locations}>\r\n          {relatedLocationList}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={styles.search_button}\r\n        onClick={e => {\r\n          if (\r\n            stateProvider.lastLocationSearchProvider.lastLocationSearch.toString()\r\n              .length > 0\r\n          ) {\r\n            let formated_searched_location_array =\r\n              stateProvider.lastLocationSearchProvider.lastLocationSearch;\r\n            formated_searched_location_array = formated_searched_location_array\r\n              .toLowerCase()\r\n              .split(\" \");\r\n            let formated_searched_location = \"\";\r\n            for (\r\n              let index = 0;\r\n              index < formated_searched_location_array.length;\r\n              index++\r\n            ) {\r\n              formated_searched_location_array[index] =\r\n                formated_searched_location_array[index]\r\n                  .charAt(0)\r\n                  .toUpperCase() +\r\n                formated_searched_location_array[index].substring(1);\r\n            }\r\n            formated_searched_location = formated_searched_location_array.join(\r\n              \" \"\r\n            );\r\n            stateProvider.locationProvider.setLocation(\r\n              formated_searched_location\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faSearchLocation}\r\n          style={stateProvider.themeStyle.themesStylesText}\r\n        />\r\n      </div>\r\n\r\n      {retriveCurrentLocationObject() ? (\r\n        favoritesElement ? (\r\n          <div\r\n            className={styles.add_to_favorites}\r\n            style={{ color: \"#c0392b\" }}\r\n            onClick={() => {\r\n              if (retriveCurrentLocationObject()) {\r\n                tempFavoriteArray = [\r\n                  ...stateProvider.favoriteLocationsProvider.favoriteLocations\r\n                ];\r\n                var removeableIndex = fetchFavoriteLocationFromList();\r\n                if (removeableIndex != -1) {\r\n                  console.log(tempFavoriteArray[removeableIndex]);\r\n                  tempFavoriteArray.splice(removeableIndex, 1);\r\n                  stateProvider.favoriteLocationsProvider.setFavoriteLocations([\r\n                    ...tempFavoriteArray\r\n                  ]);\r\n                  tempFavoriteArray = [];\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faMinusCircle} />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className={styles.add_to_favorites}\r\n            style={{ color: \"#2980b9\" }}\r\n            onClick={() => {\r\n              if (retriveCurrentLocationObject()) {\r\n                stateProvider.favoriteLocationsProvider.setFavoriteLocations([\r\n                  ...stateProvider.favoriteLocationsProvider.favoriteLocations,\r\n                  retriveCurrentLocationObject()\r\n                ]);\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faPlusCircle} />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  function clickedAutocomplete(key) {\r\n    stateProvider.selectedLocationProvider.setSelectedLocation(\r\n      relatedLocationsNames[key]\r\n    );\r\n    stateProvider.locationCodeProvider.setLocationCode(\r\n      relatedLocationsCodes[key]\r\n    );\r\n    searchBarEl.current.value = relatedLocationsNames[key];\r\n    setRelatedLocationList([]);\r\n  }\r\n\r\n  function fetchFavoriteLocationFromList() {\r\n    let keyIndex = -1;\r\n    if (retriveCurrentLocationObject()) {\r\n      stateProvider.favoriteLocationsProvider.favoriteLocations.map(\r\n        (location, key) => {\r\n          if (\r\n            location.locationCode ===\r\n              retriveCurrentLocationObject().locationCode &&\r\n            location.locationName ===\r\n              retriveCurrentLocationObject().locationName\r\n          ) {\r\n            keyIndex = key;\r\n          }\r\n        }\r\n      );\r\n    }\r\n    return keyIndex;\r\n  }\r\n\r\n  function retriveCurrentLocationObject() {\r\n    if (\r\n      stateProvider.locationCodeProvider.locationCode &&\r\n      stateProvider.selectedLocationProvider.selectedLocation\r\n    ) {\r\n      return {\r\n        locationCode: stateProvider.locationCodeProvider.locationCode,\r\n        locationName: stateProvider.selectedLocationProvider.selectedLocation\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"../Styles/weathercard.module.css\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nfunction WeatherCard(props) {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const { details } = props;\r\n\r\n  let weatherDate = new Date(details.Date);\r\n  let minTemperature = details.Temperature.Minimum;\r\n  let maxTemperature = details.Temperature.Maximum;\r\n  let wholeDayWeather = false;\r\n\r\n  if (details.Day.IconPhrase === details.Night.IconPhrase) {\r\n    wholeDayWeather = true;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.weather_card}\r\n      style={stateProvider.themeStyle.themesStylesWhole}\r\n    >\r\n      <div className={styles.weather_day_name}>\r\n        {weatherDate\r\n          .toLocaleDateString(\"us-en\", { weekday: \"long\" })\r\n          .substr(0, 3)}\r\n      </div>\r\n      <div className={styles.weather_max_temp}>\r\n        {Math.round(maxTemperature.Value)}\r\n        {stateProvider.metricUnitProvider.metricUnits ? \"\\u00b0\" : \"\\u2109\"}/\r\n        <span className={styles.weather_min_temp}>\r\n          {Math.round(minTemperature.Value)}\r\n          {stateProvider.metricUnitProvider.metricUnits ? \"\\u00b0\" : \"\\u2109\"}\r\n        </span>\r\n      </div>\r\n      {wholeDayWeather ? (\r\n        <div className={styles.weather_whole_day}>{details.Day.IconPhrase}</div>\r\n      ) : (\r\n        <div>\r\n          <div className={styles.weather_day_info}>\r\n            Day: {details.Day.IconPhrase}\r\n          </div>\r\n          <div className={styles.weather_day_night_divide} />\r\n          <div className={styles.weather_night_info}>\r\n            Night: {details.Night.IconPhrase}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from \"../Styles/singularlocationweatherdisplay.module.css\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport axios from \"axios\";\r\n\r\nfunction SingularLocationWeatherDisplay() {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const [backgroundImage, setBackgroundImage] = useState(\"\");\r\n\r\n  var latLong = \"\";\r\n\r\n  useEffect(() => {\r\n    if (!stateProvider.usedGeolocationProvider.usedGeolocation) {\r\n      async function getGeolocation() {\r\n        if (\"geolocation\" in navigator) {\r\n          navigator.geolocation.getCurrentPosition(async function(position) {\r\n            latLong = await (position.coords.latitude +\r\n              \",\" +\r\n              position.coords.longitude);\r\n            console.log(latLong);\r\n            console.log(process.env.REACT_APP_WEATHER_API_KEY);\r\n            const request = axios\r\n              .get(\r\n                \"http://dataservice.accuweather.com/locations/v1/cities/geoposition/search\",\r\n                {\r\n                  params: {\r\n                    apikey: process.env.REACT_APP_WEATHER_API_KEY,\r\n                    q: latLong,\r\n                    language: \"en-us\",\r\n                    details: false,\r\n                    toplevel: true\r\n                  }\r\n                }\r\n              )\r\n              .catch(e => {\r\n                console.error(e);\r\n                stateProvider.errorsProvider.setErrors([\r\n                  ...stateProvider.errorsProvider.errors,\r\n                  \"Error fetching geolocation data\"\r\n                ]);\r\n              })\r\n              .then(res => {\r\n                if (res) {\r\n                  stateProvider.locationCodeProvider.setLocationCode(\r\n                    res.data.Key\r\n                  );\r\n                  stateProvider.selectedLocationProvider.setSelectedLocation(\r\n                    res.data.LocalizedName +\r\n                      \", \" +\r\n                      res.data.AdministrativeArea.LocalizedName +\r\n                      \", \" +\r\n                      res.data.Country.LocalizedName\r\n                  );\r\n                }\r\n              });\r\n\r\n            stateProvider.usedGeolocationProvider.setUsedGeolocation(true);\r\n          });\r\n        }\r\n      }\r\n      getGeolocation();\r\n    }\r\n  }, [stateProvider.usedGeolocationProvider.usedGeolocation]);\r\n\r\n  useEffect(() => {\r\n    if (stateProvider.selectedLocationProvider.selectedLocation) {\r\n      async function getBackgroundImageFromLocation() {\r\n        const res = await axios\r\n          .get(\"https://api.unsplash.com/search/photos\", {\r\n            params: {\r\n              query: stateProvider.selectedLocationProvider.selectedLocation,\r\n              orientation: \"landscape\"\r\n            },\r\n            headers: {\r\n              Authorization:\r\n                \"Client-ID \" + process.env.REACT_APP_USPLASH_API_KEY\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.error(e);\r\n            stateProvider.errorsProvider.setErrors([\r\n              ...stateProvider.errorsProvider.errors,\r\n              \"Error fetching background image\"\r\n            ]);\r\n          });\r\n        if (res) {\r\n          if (res.data.results.length !== 0) {\r\n            setBackgroundImage(\r\n              res.data.results[\r\n                Math.floor(Math.random() * res.data.results.length)\r\n              ].links.download\r\n            );\r\n          }\r\n        }\r\n      }\r\n      getBackgroundImageFromLocation();\r\n\r\n      async function getCurrentWeather() {\r\n        if (stateProvider.locationCodeProvider.locationCode) {\r\n          const res = await axios\r\n            .get(\r\n              \"http://dataservice.accuweather.com/currentconditions/v1/\" +\r\n                stateProvider.locationCodeProvider.locationCode,\r\n              {\r\n                params: {\r\n                  apikey: process.env.REACT_APP_WEATHER_API_KEY,\r\n                  language: \"en-us\",\r\n                  metric: stateProvider.metricUnitProvider.metricUnits\r\n                }\r\n              }\r\n            )\r\n            .catch(e => {\r\n              console.error(e);\r\n              stateProvider.errorsProvider.setErrors([\r\n                ...stateProvider.errorsProvider.errors,\r\n                \"Error current location data\"\r\n              ]);\r\n            });\r\n          if (res) {\r\n            stateProvider.currentWeatherProvider.setCurrentWeather(res.data[0]);\r\n          }\r\n        }\r\n      }\r\n      getCurrentWeather();\r\n    }\r\n  }, [stateProvider.selectedLocationProvider.selectedLocation]);\r\n\r\n  let forecast = [];\r\n\r\n  if (stateProvider.forecastProvider.forecast) {\r\n    stateProvider.forecastProvider.forecast.DailyForecasts.map(\r\n      (forecastDetails, key) => {\r\n        forecast.push(<WeatherCard details={forecastDetails} key={key} />);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.location_image}\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      <div\r\n        className={styles.location_title}\r\n        style={stateProvider.themeStyle.themesStylesWhole}\r\n      >\r\n        {stateProvider.selectedLocationProvider.selectedLocation}\r\n      </div>\r\n      <div className={styles.container}>\r\n        {stateProvider.currentWeatherProvider.currentWeather ? (\r\n          <div\r\n            className={styles.current_weather}\r\n            style={stateProvider.themeStyle.themesStylesWhole}\r\n          >\r\n            <div className={styles.current_weather_weather_type}>\r\n              Current Weather -{\" \"}\r\n              {stateProvider.currentWeatherProvider.currentWeather.WeatherText}{\" \"}\r\n              /{\" \"}\r\n              {stateProvider.metricUnitProvider.metricUnits\r\n                ? stateProvider.currentWeatherProvider.currentWeather\r\n                    .Temperature.Metric.Value + \"\\u00b0\"\r\n                : stateProvider.currentWeatherProvider.currentWeather\r\n                    .Temperature.Imperial.Value + \"\\u2109\"}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {forecast}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingularLocationWeatherDisplay;\r\n","import React from \"react\";\r\nimport \"../Styles/index.css\";\r\nimport SearchBar from \"../Components/SearchBar\";\r\nimport SingularLocationWeatherDisplay from \"../Components/SingularLocationWeatherDisplay\";\r\n\r\nfunction Index() {\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n      <SingularLocationWeatherDisplay />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"../Styles/favoritessearchbar.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearchLocation } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nfunction FavoritesSearchBar() {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  return (\r\n    <div\r\n      className={styles.search_box}\r\n      style={stateProvider.themeStyle.themesStylesWhole}\r\n    >\r\n      <div className={styles.extend_container}>\r\n        <input\r\n          ref={stateProvider.favoriteSearchBarEl}\r\n          className={styles.search_text}\r\n          type=\"text\"\r\n          style={stateProvider.themeStyle.themesStylesText}\r\n          placeholder=\"Search your favorites\"\r\n          onChange={e => {\r\n            stateProvider.searchedFavoritesProvider.setSearchedFavorites(\r\n              e.target.value\r\n            );\r\n          }}\r\n        />\r\n        <div className={styles.search_button}>\r\n          <FontAwesomeIcon icon={faSearchLocation} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritesSearchBar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../Styles/favoriteweathercard.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction FavoriteWeatherCard(props) {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const [navigateToDetails, setNavigateToDetails] = useState(false);\r\n\r\n  const [weatherStatus, setWeatherStatus] = useState({\r\n    WeatherText: \"Default\",\r\n    Temperature: {\r\n      Metric: {\r\n        Value: 0\r\n      },\r\n      Imperial: {\r\n        Value: 0\r\n      }\r\n    }\r\n  });\r\n\r\n  var favoriteLocationsArray = [];\r\n\r\n  useEffect(() => {\r\n    async function retriveSingleLocationCurrentWeather() {\r\n      const res = await axios\r\n        .get(\r\n          \"http://dataservice.accuweather.com/currentconditions/v1/\" +\r\n            props.locationCode,\r\n          {\r\n            params: {\r\n              apikey: process.env.REACT_APP_WEATHER_API_KEY,\r\n              language: \"en-us\",\r\n              details: false\r\n            }\r\n          }\r\n        )\r\n        .catch(e => {\r\n          console.error(e);\r\n          stateProvider.errorsProvider.setErrors([\r\n            ...stateProvider.errorsProvider.errors,\r\n            \"Error fetching current weather\"\r\n          ]);\r\n        });\r\n      if (res) {\r\n        setWeatherStatus(res.data[0]);\r\n      }\r\n    }\r\n    retriveSingleLocationCurrentWeather();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {navigateToDetails ? (\r\n        displayFullDetails()\r\n      ) : (\r\n        <React.Fragment>\r\n          <div\r\n            className={styles.container}\r\n            style={stateProvider.themeStyle.themesStylesWhole}\r\n          >\r\n            <div\r\n              className={styles.seperator}\r\n              onClick={() => {\r\n                setNavigateToDetails(true);\r\n              }}\r\n            >\r\n              <div className={styles.location_name}>{props.locationName}</div>\r\n              <div className={styles.location_temp}>\r\n                {stateProvider.metricUnitProvider.metricUnits\r\n                  ? weatherStatus.Temperature.Metric.Value + \"\\u00b0\"\r\n                  : weatherStatus.Temperature.Imperial.Value + \"\\u2109\"}\r\n              </div>\r\n              <div className={styles.location_weather}>\r\n                {weatherStatus.WeatherText}\r\n              </div>\r\n            </div>\r\n            <div className={styles.remove_button}>\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={styles.remove_icon}\r\n                onClick={() => {\r\n                  favoriteLocationsArray =\r\n                    stateProvider.favoriteLocationsProvider.favoriteLocations;\r\n                  favoriteLocationsArray.splice(props.index, 1);\r\n                  stateProvider.favoriteLocationsProvider.setFavoriteLocations([\r\n                    ...favoriteLocationsArray\r\n                  ]);\r\n                  stateProvider.searchedFavoritesProvider.setSearchedFavorites(\r\n                    \"\"\r\n                  );\r\n                  stateProvider.favoriteSearchBarEl.current.value = \"\";\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n\r\n  function displayFullDetails() {\r\n    console.log(\"Came from - \");\r\n    console.log(props);\r\n    stateProvider.locationCodeProvider.setLocationCode(props.locationCode);\r\n    stateProvider.selectedLocationProvider.setSelectedLocation(\r\n      props.locationName\r\n    );\r\n    stateProvider.searchedFavoritesProvider.setSearchedFavorites(\"\");\r\n    stateProvider.favoriteSearchBarEl.current.value = \"\";\r\n    return <Redirect to=\"/\" push />;\r\n  }\r\n}\r\n\r\nexport default FavoriteWeatherCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from \"../Styles/favorites.module.css\";\r\nimport FavoritesSearchBar from \"../Components/FavoritesSearchBar\";\r\nimport FavoriteWeatherCard from \"../Components/FavoriteWeatherCard\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nfunction Favorites() {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const [allFavorites, setAllFavorites] = useState([]);\r\n  const [allDisplayed, setAllDisplayed] = useState([]);\r\n\r\n  var allFavoriteArray = [];\r\n  var allDisplayedArray = [];\r\n\r\n  useEffect(() => {\r\n    stateProvider.locationProvider.setLocation(\"\");\r\n    stateProvider.searchedFavoritesProvider.setSearchedFavorites(\"\");\r\n    stateProvider.favoriteSearchBarEl.current.value = \"\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (stateProvider.favoriteLocationsProvider.favoriteLocations.length >= 0) {\r\n      stateProvider.favoriteLocationsProvider.favoriteLocations.map(\r\n        (favoriteLocation, key) => {\r\n          allFavoriteArray.push(\r\n            <FavoriteWeatherCard\r\n              key={key}\r\n              index={key}\r\n              locationCode={favoriteLocation.locationCode}\r\n              locationName={favoriteLocation.locationName}\r\n            />\r\n          );\r\n        }\r\n      );\r\n      setAllFavorites([...allFavoriteArray]);\r\n    }\r\n  }, [stateProvider.favoriteLocationsProvider.favoriteLocations]);\r\n\r\n  useEffect(() => {\r\n    allFavorites.map((location, key) => {\r\n      if (\r\n        location.props.locationName\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(\r\n            stateProvider.searchedFavoritesProvider.searchedFavorites\r\n              .toString()\r\n              .toLowerCase()\r\n          )\r\n      ) {\r\n        allDisplayedArray.push(location);\r\n      }\r\n      setAllDisplayed([...allDisplayedArray]);\r\n    });\r\n  }, [stateProvider.searchedFavoritesProvider.searchedFavorites]);\r\n\r\n  return (\r\n    <div>\r\n      <FavoritesSearchBar />\r\n      <div className={styles.favorite_location_container}>\r\n        {stateProvider.searchedFavoritesProvider.searchedFavorites\r\n          ? allDisplayed\r\n          : allFavorites}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"../Styles/errors.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nfunction Error(props) {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  var errorList = [];\r\n\r\n  return (\r\n    <div\r\n      className={styles.error_container}\r\n      style={stateProvider.themeStyle.themesStylesWhole}\r\n    >\r\n      <div className={styles.error_text}>{props.errorText}</div>\r\n      <div\r\n        className={styles.error_dismiss_button}\r\n        onClick={() => {\r\n          errorList = stateProvider.errorsProvider.errors;\r\n          errorList.splice(props.key, 1);\r\n          stateProvider.errorsProvider.setErrors([...errorList]);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport {\r\n  /*BrowserRouter as Router*/ HashRouter,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport styles from \"../Styles/header.module.css\";\r\nimport Index from \"../Routes/Index\";\r\nimport Favorites from \"../Routes/Favorites\";\r\nimport Error from \"../Components/Error\";\r\nimport { StateContext } from \"../Context/StateContext\";\r\n\r\nfunction Header() {\r\n  const stateProvider = useContext(StateContext);\r\n\r\n  const [currentErrors, setCurrentErrors] = useState();\r\n\r\n  var errorList = [];\r\n\r\n  useEffect(() => {\r\n    if (stateProvider.errorsProvider.errors) {\r\n      stateProvider.errorsProvider.errors.map((error, key) => {\r\n        errorList.push(<Error key={key} errorText={error} />);\r\n      });\r\n      setCurrentErrors([...errorList]);\r\n    }\r\n  }, [stateProvider.errorsProvider]);\r\n\r\n  let logoText = \"Weather App By Ido\";\r\n\r\n  return (\r\n    <HashRouter>\r\n      <header\r\n        className={styles.header}\r\n        style={stateProvider.themeStyle.themesStylesWhole}\r\n      >\r\n        {logoText}\r\n        <div className={styles.error_starter}>{currentErrors}</div>\r\n        <div\r\n          className={styles.unit_changer}\r\n          onClick={() => {\r\n            if (stateProvider.metricUnitProvider.metricUnits) {\r\n              stateProvider.metricUnitProvider.setMetricUnits(false);\r\n            } else {\r\n              stateProvider.metricUnitProvider.setMetricUnits(true);\r\n            }\r\n          }}\r\n        >\r\n          {stateProvider.metricUnitProvider.metricUnits\r\n            ? \"Units: C\"\r\n            : \"Units: F\"}\r\n        </div>\r\n        <div\r\n          className={styles.theme_changer}\r\n          onClick={() => {\r\n            if (stateProvider.themeProvider.lightTheme) {\r\n              stateProvider.themeProvider.setLightTheme(false);\r\n            } else {\r\n              stateProvider.themeProvider.setLightTheme(true);\r\n            }\r\n          }}\r\n        >\r\n          Theme: {stateProvider.themeProvider.lightTheme ? \"Light\" : \"Dark\"}\r\n        </div>\r\n        <nav>\r\n          <ul className={styles.nav_links}>\r\n            <li className={styles.nav_link}>\r\n              <Link\r\n                className={styles.link}\r\n                to=\"/\"\r\n                style={stateProvider.themeStyle.themesStylesWhole}\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className={styles.nav_link}>\r\n              <Link\r\n                className={styles.link}\r\n                to=\"/favorites\"\r\n                style={stateProvider.themeStyle.themesStylesWhole}\r\n              >\r\n                Favorites\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <Switch>\r\n        <Route path=\"/favorites\">\r\n          <Favorites />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Index />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"sourceRoot":""}